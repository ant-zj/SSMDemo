#DEBUG < INFO < WARN < ERROR < FATAL
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL  
#%r 输出自应用启动到输出该log信息耗费的毫秒数  
#%c 输出所属的类目，通常就是所在类的全名  
#%t 输出产生该日志事件的线程名  
#%n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”  
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921  
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)


### set log levels ###
log4j.rootLogger = DEBUG , C , D , E 
 
### console ###
log4j.appender.C = org.apache.log4j.ConsoleAppender
log4j.appender.C.Target = System.out
log4j.appender.C.layout = org.apache.log4j.PatternLayout
log4j.appender.C.layout.ConversionPattern = %d{yyyy-MMM-dd HH:mm:ss,SSS}-[TS] [%-5p] [%t] [%c] - %m%n
#           %d{yyyy-MMM-dd HH:mm:ss,SSS}-[TS] %p %t %c - %m%n
 
### log file ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = ${catalina.home}/logs/ChatRobot.log
log4j.appender.D.Append = true
log4j.appender.D.Threshold = INFO 
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %d{yyyy-MMM-dd HH:mm:ss,SSS}-[TS] [%-5p] [%t] [%c] - %m%n
 
### exception ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File = ${catalina.home}/logs/ChatRobot_error.log
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR 
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %d{yyyy-MMM-dd HH:mm:ss,SSS}-[TS] [%-5p] [%t] [%c] - %m%n
 
###mybatis show sql###
log4j.logger.com.ibatis=debug
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=debug
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=debug
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug
 
log4j.logger.java.sql.Connection=debug
log4j.logger.java.sql.Statement=debug
log4j.logger.java.sql.PreparedStatement=debug